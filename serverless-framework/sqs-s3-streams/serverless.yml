
service: localstack-sls

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, "dev"}
  environment: 
    BUCKET_NAME: s3-localstack-dev
    SQS_NAME: sqs-localstack-dev
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - sqs:SendMessage
        - sqs:GetQueueUrl
        - sqs:CreateQueue
        - sqs:ReceiveMessage
      Resource: ${self:custom.sqsArn}
    - Effect: Allow
      Action:
        - s3:*
      Resource: 
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}

      


plugins:
  - serverless-localstack
  - serverless-offline
  - serverless-mocha-plugin

custom:
  sqsArn:
    Fn::GetAtt:
      - SQSQueue
      - Arn
  localstack:
    stages:
      - local
    # desabilitar o localstack quando fizer deploy
    autostart: false
  serverless-offline:
    useChildProcessess: true

package:
  individually: true
  excludeDevDependencies: true

functions:
  s3listener:
    handler: src/.s3listener
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules: 
            - suffix: .csv
  sqslistener:
    handler: src/.sqslistener
    events:
      - sqs:
          batchSize: 1 # numero de lambdas por mensagem
          arn: ${self:custom.sqsArn}

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.environment.SQS_NAME}
        VisibilityTimeout: 60
